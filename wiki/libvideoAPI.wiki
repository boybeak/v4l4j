#summary this page presents the libvideo API and its header files
#sidebar LibvideoApiSideBar

Information on libvideo is split across multiple pages:

 * The [libvideo libvideo] page gives a short introduction to libvideo and how it came about.
 * The DownloadBuildUsage page explains how to download it, compile it and use it.
 * The [libvideoAPI API] page (this page) explains how to write a program with libvideo.

=libvideo API=
*libvideo is NOT reentrant ! Only one thread should call libvideo methods at any time.* The application using libvideo is responsible for implementing a proper locking mechanism.

The libvideo API is divided in five categories (or interfaces):
 # *[#The Video Device interface The video device interface]*. This is the main interface which is used to acquire other interfaces,
 # *[#The_Capture_interface The capture interface]* used to capture images from the device,
 # *The control interface* used to access video controls,
 # *The query interface* used to gather information on the video device,
 # *The tuner interface* used to control tuners on the video device.
An interface provides a set of methods related in functionality. Using an interface is a two step process: 
 * you first *acquire the interface* you want to access by calling the right method on the main interface (video device). You can then use this interface.
 * when you are done, you must *release the interface* by calling the appropriate method on the main interface.
Interfaces are independent from each other and can be used regardless of which other interfaces are currently acquired.

= Header files = 
The main header file is `libvideo.h` and contains all user-side required structures, function definitions and macros. `palettes.h` contains the definitions of an array of `struct libvideo_palette` which can be used to translate a libvideo palette index to its textual name. `livideo-err.h` contains all the macro definitions for returned values representing error codes.